---
# Source: mattermost-team-edition/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mattermost-mattermost-team-edition
  labels:
    app.kubernetes.io/name: mattermost-team-edition
    app.kubernetes.io/instance: mattermost
    app.kubernetes.io/managed-by: Tiller
    helm.sh/chart: mattermost-team-edition-3.1.2
  annotations:
spec:
  accessModes:
  - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"

---
# Source: mattermost-team-edition/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mattermost-team-edition
  labels:
    app.kubernetes.io/name: mattermost-team-edition
    app.kubernetes.io/instance: mattermost
    app.kubernetes.io/managed-by: Tiller
    helm.sh/chart: mattermost-team-edition-3.1.2
spec:
  selector:
    app.kubernetes.io/name: mattermost-team-edition
    app.kubernetes.io/instance: mattermost
    app.kubernetes.io/managed-by: Tiller
  type: ClusterIP
  ports:
  - port: 8065
    targetPort: http
    protocol: TCP
    name: mattermost-team-edition

---
# Source: mattermost-team-edition/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mattermost-mattermost-team-edition
  labels:
    app.kubernetes.io/name: mattermost-team-edition
    app.kubernetes.io/instance: mattermost
    app.kubernetes.io/managed-by: Tiller
    helm.sh/chart: mattermost-team-edition-3.1.2
spec:
  replicas: 1
  strategy:
    type: Recreate
    rollingUpdate: null
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mattermost-team-edition
      app.kubernetes.io/instance: mattermost
      app.kubernetes.io/managed-by: Tiller
  template:
    metadata:
      annotations:
        checksum/config: 4bd4e37dbd48589d756065c1e1df9aff7d128328b077fa74380f9f44f084147a
      labels:
        app.kubernetes.io/name: mattermost-team-edition
        app.kubernetes.io/instance: mattermost
        app.kubernetes.io/managed-by: Tiller
        helm.sh/chart: mattermost-team-edition-3.1.2
    spec:
      initContainers:
      containers:
      - name: mattermost-team-edition
        image: "mattermost/mattermost-team-edition:5.9.0"
        imagePullPolicy: IfNotPresent
        env:
        ports:
        - name: http
          containerPort: 8065
          protocol: TCP
        livenessProbe:
          initialDelaySeconds: 90
          timeoutSeconds: 5
          periodSeconds: 15
          httpGet:
            path: /api/v4/system/ping
            port: http
        readinessProbe:
          initialDelaySeconds: 15
          timeoutSeconds: 5
          periodSeconds: 15
          httpGet:
            path: /api/v4/system/ping
            port: http
        volumeMounts:
        - mountPath: /mattermost/config/
          name: config-json
          readOnly: true
        - mountPath: /mattermost/data
          name: mattermost-data
        resources:
            null
            
      volumes:
      - name: config-json
        flexVolume:
          driver: "azure/kv"
          secretRef:
            name: kvcreds
          options:
            usepodidentity: "false"
            keyvaultname: "$KV_NAME"
            keyvaultobjectnames: "config"
            keyvaultobjectaliases: "config.json"
            keyvaultobjecttypes: secret
            resourcegroup: "$RSGROUP"
            subscriptionid: "$ARM_SUBSCRIPTION_ID"
            tenantid: "$ARM_TENANT_ID"
      - name: mattermost-data
      
        persistentVolumeClaim:
          claimName: mattermost-mattermost-team-edition
